{"version":3,"file":"RequestsView.js","sources":["../src/RequestsView.ts"],"sourcesContent":["import { msg } from '@lit/localize';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { RequestHistoryItem } from './models/history-response.js';\nimport { REQUEST_STATUS } from './models/priv-terms.js';\nimport { buttonStyles, containerStyles, textStyles } from './styles.js';\nimport { STATUS_DESCRIPTIONS } from './utils/dictionary.js';\nimport { getRequestHistory } from './utils/privacy-request-api.js';\nimport { ComponentState } from './utils/states.js';\n\n@customElement('requests-view')\nexport class RequestsView extends LitElement {\n  static styles = [\n    containerStyles,\n    buttonStyles,\n    textStyles,\n    css`\n      :host {\n        display: grid;\n        max-width: 600px;\n        margin: auto;\n        row-gap: 40px;\n        justify-items: center;\n      }\n\n      #table-ctr {\n        width: 100%;\n        /* overflow-y: auto;\n        max-height: 500px; */\n      }\n\n      #requests-list {\n        display: grid;\n        row-gap: 30px;\n      }\n\n      .list-header-ctr {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        text-align: center;\n      }\n\n      .list-item-ctr {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        padding: 20px 0px;\n        border: 2px solid #5b5b5b;\n        border-radius: 10px;\n        box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.5);\n      }\n\n      .list-item {\n        display: inline-flex;\n        justify-items: center;\n        text-align: center;\n        justify-self: center;\n        align-items: center;\n      }\n\n      .list-item:last-child {\n        padding: 0px 20px 0px 0px;\n      }\n\n      #new-request-btn {\n        font-size: 18px;\n      }\n    `,\n  ];\n\n  @state() _requests: RequestHistoryItem[] = [];\n\n  constructor() {\n    super();\n    getRequestHistory().then(response => {\n      this._requests = response.history;\n    });\n  }\n\n  handleRequestClick(e: Event) {\n    this.dispatchEvent(\n      new CustomEvent('component-state-change', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          newState: ComponentState.STATUS,\n          requestId: (e.target as HTMLInputElement).id,\n        },\n      })\n    );\n  }\n\n  handleNewRequestClick() {\n    this.dispatchEvent(\n      new CustomEvent('component-state-change', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          newState: ComponentState.MENU,\n        },\n      })\n    );\n  }\n\n  render() {\n    return html`\n      <div id=\"table-ctr\">\n        <div id=\"requests-list\">\n          <div class=\"list-header-ctr\">\n            <span class=\"list-header\"><b>${msg('Created')}</b></span>\n            <span class=\"list-header\"><b>${msg('Status')}</b></span>\n            <span class=\"list-header\"><b>${msg('Demands')}</b></span>\n            <span></span>\n          </div>\n          ${map(\n            this._requests,\n            r => html`\n              <div class=\"list-item-ctr\">\n                <span class=\"list-item\"\n                  >${new Date(r.date).toLocaleDateString('en-gb')}</span\n                >\n                <span class=\"list-item\"\n                  >${STATUS_DESCRIPTIONS[r.status as REQUEST_STATUS]()}</span\n                >\n                <span class=\"list-item\">${r.demands}</span>\n                <button\n                  id=${r.id}\n                  class=\"link-btn dark-font underline list-item\"\n                  @click=${this.handleRequestClick}\n                >\n                  ${msg('See Details')}\n                </button>\n              </div>\n            `\n          )}\n        </div>\n      </div>\n      <div id=\"new-request-ctr\">\n        <button\n          id=\"new-request-btn\"\n          class=\"link-btn dark-font underline\"\n          @click=${this.handleNewRequestClick}\n        >\n          ${msg('Submit a new Privacy Request')}\n        </button>\n      </div>\n    `;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAYA,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU,CAAA;AA4D1C,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;QAHD,IAAS,CAAA,SAAA,GAAyB,EAAE,CAAC;AAI5C,QAAA,iBAAiB,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAG;AAClC,YAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC;AACpC,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,kBAAkB,CAAC,CAAQ,EAAA;AACzB,QAAA,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,wBAAwB,EAAE;AACxC,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,MAAM,EAAE;gBACN,QAAQ,EAAE,cAAc,CAAC,MAAM;AAC/B,gBAAA,SAAS,EAAG,CAAC,CAAC,MAA2B,CAAC,EAAE;AAC7C,aAAA;AACF,SAAA,CAAC,CACH,CAAC;KACH;IAED,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,wBAAwB,EAAE;AACxC,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,MAAM,EAAE;gBACN,QAAQ,EAAE,cAAc,CAAC,IAAI;AAC9B,aAAA;AACF,SAAA,CAAC,CACH,CAAC;KACH;IAED,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAA,CAAA;;;;2CAI4B,GAAG,CAAC,SAAS,CAAC,CAAA;2CACd,GAAG,CAAC,QAAQ,CAAC,CAAA;2CACb,GAAG,CAAC,SAAS,CAAC,CAAA;;;YAG7C,GAAG,CACH,IAAI,CAAC,SAAS,EACd,CAAC,IAAI,IAAI,CAAA,CAAA;;;qBAGA,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAA;;;AAG5C,mBAAA,EAAA,mBAAmB,CAAC,CAAC,CAAC,MAAwB,CAAC,EAAE,CAAA;;AAE5B,wCAAA,EAAA,CAAC,CAAC,OAAO,CAAA;;AAE5B,qBAAA,EAAA,CAAC,CAAC,EAAE,CAAA;;AAEA,yBAAA,EAAA,IAAI,CAAC,kBAAkB,CAAA;;oBAE9B,GAAG,CAAC,aAAa,CAAC,CAAA;;;aAGzB,CACF,CAAA;;;;;;;AAOQ,iBAAA,EAAA,IAAI,CAAC,qBAAqB,CAAA;;YAEjC,GAAG,CAAC,8BAA8B,CAAC,CAAA;;;KAG1C,CAAC;KACH;EACF;AAvIQ,YAAA,CAAA,MAAM,GAAG;IACd,eAAe;IACf,YAAY;IACZ,UAAU;AACV,IAAA,GAAG,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDF,IAAA,CAAA;CACF,CAAC;AAEO,UAAA,CAAA;AAAR,IAAA,KAAK,EAAE;AAAsC,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AA1DnC,YAAY,GAAA,UAAA,CAAA;IADxB,aAAa,CAAC,eAAe,CAAC;AAClB,CAAA,EAAA,YAAY,CAwIxB;;;;"}