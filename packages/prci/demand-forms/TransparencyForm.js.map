{"version":3,"file":"TransparencyForm.js","sources":["../../src/demand-forms/TransparencyForm.ts"],"sourcesContent":["import { msg } from '@lit/localize';\nimport { css, html, TemplateResult } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { Demand } from '../models/demand.js';\nimport { ACTION, PROVENANCE } from '../models/priv-terms.js';\nimport {\n  buttonStyles,\n  containerStyles,\n  imgStyles,\n  textStyles,\n} from '../styles.js';\nimport { enabledActions } from '../utils/conf.js';\nimport {\n  ACTION_DESCRIPTIONS,\n  PROVENANCE_DESCRIPTIONS,\n} from '../utils/dictionary.js';\nimport { ActionForm } from './ActionForm.js';\nimport { FormComponentState } from '../utils/states.js';\n\nimport '../SlottedDropdown.js';\nimport '../AllChecklist.js';\nimport { Restriction } from '../models/restriction.js';\n\n/**\n * ActionForm for the Transparency PRIV action. Includes a dropdown and text element.\n *\n * The transparency form follows a different pattern than the other actions, as each\n * TRANSPARENCY.* actually represents a completely separate demand, but we display them\n * all in one DemandBuilder element.\n */\n@customElement('transparency-form')\nexport class TransparencyForm extends ActionForm {\n  @property({ type: Array, attribute: false })\n  transparencyActions: ACTION[] = Object.values(ACTION).filter(a =>\n    a.includes('TRANSPARENCY.')\n  );\n\n  @property({ type: Array }) advancedSettings = [];\n\n  @state() _additionalMessage = '';\n\n  @state() _provenances: Set<Restriction> = new Set<Restriction>();\n\n  static styles = [\n    ActionForm.styles,\n    containerStyles,\n    buttonStyles,\n    textStyles,\n    imgStyles,\n    css`\n      :host {\n        display: grid;\n        row-gap: 35px;\n        align-content: flex-start;\n        margin: 0px;\n      }\n\n      .transparency-options {\n        padding: 40px 40px 20px 40px;\n      }\n\n      #dmd-ctr {\n        display: grid;\n        row-gap: 20px;\n      }\n\n      #dmd-ctr ul {\n        margin: 0;\n      }\n\n      #dmd-ctr li:not(:last-child) {\n        margin-bottom: 15px;\n      }\n\n      #edit-heading-1 {\n        font-weight: bold;\n        grid-column: 1/2;\n        padding: 0px;\n      }\n\n      p {\n        margin: 0px;\n      }\n\n      .additional-msg-ctr {\n        display: grid;\n        row-gap: 20px;\n        margin: 0px 0px 25px 0px;\n      }\n    `,\n  ];\n\n  constructor() {\n    super();\n\n    // Transparency action listeners\n    this.addEventListener('transparency-action-select', e => {\n      const details = (e as CustomEvent).detail;\n      const demand: Demand = {\n        action: details.id,\n        message: this._additionalMessage,\n        restrictions: this._provenances,\n      };\n      this.setDemand(demand);\n    });\n    this.addEventListener('transparency-action-deselect', e => {\n      const { id } = (e as CustomEvent).detail;\n      this.deleteDemand(id);\n    });\n\n    // Provenance listeners\n    this.addEventListener('provenance-select', e => {\n      const { id } = (e as CustomEvent).detail;\n      this._provenances.add(id);\n      this.demands.forEach(d => {\n        const demand = d;\n        demand.restrictions?.add(id);\n      });\n    });\n    this.addEventListener('provenance-deselect', e => {\n      const { id } = (e as CustomEvent).detail;\n      this._provenances.delete(id);\n      this.demands.forEach(d => {\n        const demand = d;\n        demand.restrictions?.delete(id);\n      });\n    });\n\n    // Additional message listener\n    this.addEventListener('text-element-change', e => {\n      this._additionalMessage = (e as CustomEvent).detail?.text;\n      this.demands.forEach(d => {\n        const demand = d;\n        demand.message = this._additionalMessage;\n      });\n    });\n  }\n\n  handleAdditionalMessageInput(e: Event) {\n    const event = new CustomEvent('text-element-change', {\n      bubbles: true,\n      composed: true,\n      detail: {\n        text: (e.target as HTMLTextAreaElement).value,\n      },\n    });\n    this.dispatchEvent(event);\n  }\n\n  validate(): boolean {\n    return true;\n  }\n\n  /**\n   * The defualt transparency demand contains all transparency actions\n   * @returns List of demands with each TRANSPARENCY.* action\n   */\n  getDefaultDemands(): Demand[] {\n    return Object.values(ACTION)\n      .filter(a => a.includes('TRANSPARENCY.'))\n      .map(a => ({\n        action: a,\n        restrictions: new Set<Restriction>(Object.values(PROVENANCE)),\n      }));\n  }\n\n  getEditTemplate(demands: Demand[]): TemplateResult<1 | 2> {\n    const selectedActions = Object.values(demands).map(d => d.action);\n    return html`\n      <p id=\"edit-heading-1\">\n        <b>${msg('Details of my TRANSPARENCY Demand')}</b>\n      </p>\n\n      <div class=\"light-border transparency-options\">\n        <span slot=\"prompt\"><b>${msg('I want to know:')}</b></span>\n        <all-checklist\n          .choices=${this.transparencyActions.map(a => ({\n            id: a,\n            description: ACTION_DESCRIPTIONS[a](),\n            checked: selectedActions.includes(a),\n            disabled: !enabledActions.get(a) ?? true,\n          }))}\n          all-message=${msg(\n            'ALL information related to data processing practices and know if the organization has data on me'\n          )}\n          component-mode=${FormComponentState.CLOSED}\n          event-prefix=\"transparency-action\"\n          include-buttons\n        ></all-checklist>\n      </div>\n\n      <slotted-dropdown header=${msg('Advanced settings')} include-buttons>\n        <span slot=\"prompt\"\n          ><b\n            >${msg(\n              'My transparency demand applies to the following provenance:'\n            )}</b\n          ></span\n        >\n        <all-checklist\n          .choices=${Object.values(PROVENANCE).map(p => ({\n            id: p,\n            description: PROVENANCE_DESCRIPTIONS[p](),\n            checked: this.demands[0].restrictions?.has(p),\n            disabled: false,\n          }))}\n          all-message=${msg('All provenances')}\n          component-mode=${FormComponentState.OPEN}\n          event-prefix=\"provenance\"\n        ></all-checklist>\n      </slotted-dropdown>\n      <slotted-dropdown\n        header=${msg('Additional message (optional)')}\n        include-buttons\n      >\n        <div class=\"additional-msg-ctr\">\n          <span class=\"\">${msg('My additional message:')}</span>\n          <span class=\"italic\"\n            >${msg(\n              'Please note that adding a personalized message might lead to the demand taking longer to be processed'\n            )}</span\n          >\n          <textarea\n            id=\"additional-msg\"\n            class=\"std-txt-area\"\n            name=\"paragraph_text\"\n            cols=\"50\"\n            rows=\"10\"\n            @input=${this.handleAdditionalMessageInput}\n            .value=${demands.length !== 0 ? demands[0].message ?? '' : ''}\n          ></textarea>\n        </div>\n      </slotted-dropdown>\n    `;\n  }\n\n  getReviewTemplate(): TemplateResult<1 | 2> {\n    // TODO: Delete\n    return html`\n      <div id=\"dmd-ctr\">\n        <p id=\"review-hd-1\"><b>${msg('TRANSPARENCY demand')}</b></p>\n        <p>${msg('I want to know:')}</p>\n        <ul id=\"transparency-demand-review-list\">\n          ${Array.from(this.demands.values()).map(\n            (a: Demand) =>\n              html` <li><b>${ACTION_DESCRIPTIONS[a.action]()}</b></li> `\n          )}\n        </ul>\n        ${this._additionalMessage\n          ? html`\n              <p>${msg('Plus additional info:')}</p>\n              <p id=\"extra-msg-txt\"><i>${this._additionalMessage}</i></p>\n            `\n          : null}\n      </div>\n    `;\n  }\n}\n"],"names":[],"mappings":"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"}