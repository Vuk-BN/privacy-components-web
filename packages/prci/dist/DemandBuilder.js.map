{"version":3,"file":"DemandBuilder.js","sources":["../src/DemandBuilder.ts"],"sourcesContent":["/* eslint-disable */\nimport { html, css, LitElement, PropertyValueMap } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { choose } from 'lit/directives/choose.js';\nimport { localized, msg, str } from '@lit/localize';\n\nimport { ACTION } from './models/priv-terms.js';\nimport { enabledActions } from './utils/conf.js';\nimport { Demand } from './models/demand.js';\nimport { ACTION_TITLES, ACTION_DESCRIPTIONS } from './utils/dictionary.js';\nimport { DemandState } from './utils/states.js';\nimport './DemandBuilderActionMenu.js';\nimport './DemandBuilderDropdownElement.js';\nimport './DemandBuilderTextElement.js';\nimport './demand-forms/TransparencyForm.js';\nimport './DemandBuilderSidebarItem.js';\nimport { when } from 'lit/directives/when.js';\n\n/**\n * Handles creation and review of a single demand. Uses one of the ActionForm\n * components to display different options for each action type.\n */\n@customElement('demand-builder')\n@localized()\nexport class DemandBuilder extends LitElement {\n  @property({ type: Array }) includedActions: ACTION[] = [];\n\n  @property({ type: Number, attribute: 'demand-state' })\n  demandState: DemandState = DemandState.SELECT_ACTION;\n\n  @property({ attribute: false }) demands = new Map<string, Demand>();\n\n  @state() _selectedAction = ACTION.TRANSPARENCY;\n\n  @state() _sidebarSelectedIndex = 0;\n\n  constructor() {\n    super();\n\n    // Demand update listeners\n    this.addEventListener('demand-set', e => {\n      const { demandId, demand } = (e as CustomEvent).detail;\n      this.demands.set(demandId, demand);\n    });\n    this.addEventListener('demand-delete', e => {\n      const { id } = (e as CustomEvent).detail;\n      this.demands.delete(id);\n    });\n    this.addEventListener('demand-set-multiple', e => {\n      ((e as CustomEvent).detail.demands as Map<string, Demand>).forEach(\n        (demand, id) => this.demands.set(id, demand)\n      );\n    });\n\n    // UI element listeners\n    this.addEventListener('demand-action-menu-click', () => {\n      this._selectedAction = ACTION.TRANSPARENCY;\n      this.demandState = DemandState.EDIT;\n    });\n    this.addEventListener('sidebar-click', e => {\n      this._sidebarSelectedIndex = this.includedActions.indexOf(\n        (e as CustomEvent).detail.id\n      );\n    });\n  }\n\n  static styles = css`\n    :host {\n      display: grid;\n      grid-row: 2/3;\n      grid-column: 1/2;\n      grid-template-columns: repeat(4, 1fr);\n    }\n\n    .demand-builder-back-btn {\n      grid-column-start: 1/2;\n    }\n\n    #sidebar {\n      display: grid;\n      height: fit-content;\n    }\n\n    p {\n      padding: 0px;\n      margin: 0px;\n    }\n  `;\n\n  /**\n   * Get a HTML template for the demand builder sidebar, with each PRIV action\n   * included in this DemandBuilder as an option.\n   * @returns HTML template for sidebar display\n   */\n  getSidebarTemplate() {\n    return html`\n      <div id=\"sidebar\">\n        <p id=\"sidebar-title\">${msg('Type of demand:')}</p>\n        ${this.includedActions.map(\n          (a, i) => html`\n            <demand-builder-sidebar-item\n              id=${a}\n              title=${ACTION_TITLES[a]()}\n              description=${ACTION_DESCRIPTIONS[a]()}\n              ?disabled=${!enabledActions.get(a)}\n              ?checked=${i === this._sidebarSelectedIndex}\n            ></demand-builder-sidebar-item>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Get an HTML template for the form corresponding to the selected action type.\n   * @returns HTML template for action form\n   */\n  getSelectedFormTemplate() {\n    return html`\n      ${choose(this._selectedAction, [\n        [\n          ACTION.TRANSPARENCY,\n          () => html`<transparency-form\n            demand-state=${this.demandState}\n            .demandBuilderId=${this.id}\n            .transparencyActions=${Object.values(ACTION).filter(a =>\n              a.includes('TRANSPARENCY.')\n            )}\n            .demands=${this.demands}\n          ></transparency-form>`,\n        ],\n      ])}\n    `;\n  }\n\n  /**\n   * Hook into update to fire an event letting the top level component know the user\n   * has navigated past the action menu screen.\n   * @param changedProperties Map of changed values to their previous value\n   */\n  update(changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) {\n    super.update(changedProperties);\n\n    if (\n      changedProperties.has('demandState') &&\n      changedProperties.get('demandState') === DemandState.SELECT_ACTION\n    ) {\n      this.dispatchEvent(\n        new Event('menu-done', { bubbles: true, composed: true })\n      );\n    }\n  }\n\n  /**\n   * Hook into firstUpdated to include an initial calculation of the sidebar index\n   * @param _changedProperties\n   */\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    super.firstUpdated(_changedProperties);\n    this._sidebarSelectedIndex = this.includedActions.indexOf(\n      this._selectedAction\n    );\n  }\n\n  render() {\n    if (this.demandState === DemandState.SELECT_ACTION) {\n      return html`<demand-builder-action-menu\n        .includedActions=${this.includedActions}\n      ></demand-builder-action-menu>`;\n    } else {\n      return html`\n        <!-- Include sidebar in edit mode -->\n        ${when(this.demandState === DemandState.EDIT, () =>\n          this.getSidebarTemplate()\n        )}\n        <!-- Display selected form -->\n        ${this.getSelectedFormTemplate()}\n      `;\n    }\n  }\n}\n"],"names":[],"mappings":"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"}