{"version":3,"file":"privacy-request-api.js","sources":["../../src/utils/privacy-request-api.ts"],"sourcesContent":["import { PrivacyRequest } from '../models/privacy-request.js';\nimport { PrivacyResponse } from '../models/privacy-response.js';\n\n/**\n * Determine the correct mock header for a PrivacyRequest\n * @param request PrivacyRequest to get mock header for\n * @returns String to be used in the \"prefer\" header\n */\nfunction getMockHeader(request: PrivacyRequest): string {\n  // If more than 1 demand, send the default multi demand response\n  if (request.demands.length > 1) {\n    return 'code=200, example=TRANSPARENCY Multi-Response';\n  }\n\n  // Select the mock response corresponding to this action\n  if (request.demands.length === 1) {\n    const { action } = request.demands[0];\n    return `code=200, example=${action} Response`;\n  }\n\n  // If no demands get bad request response\n  return 'code=400';\n}\n\n/**\n * Send a PrivacyRequest to the privacy-request API\n * @param {PrivacyRequest} request Request body to send\n * @param {boolean} mock Flag indicating if the mock endpoint should be used\n * @returns\n */\nexport async function sendPrivacyRequest(\n  request: PrivacyRequest,\n  mock: boolean = true\n): Promise<PrivacyResponse> {\n  const url = mock\n    ? 'https://stoplight.io/mocks/blindnet/product-management:open-api/74767654/privacy-request'\n    : 'https://devkit-pce-staging.azurewebsites.net/v0/privacy-request';\n  const headers: any = mock\n    ? {\n        'Content-Type': 'application/json',\n        Prefer: getMockHeader(request),\n      }\n    : {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      };\n\n  return fetch(url, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(request),\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json() as Promise<PrivacyResponse>;\n  });\n}\n"],"names":[],"mappings":"AAGA;;;;AAIG;AACH,SAAS,aAAa,CAAC,OAAuB,EAAA;;AAE5C,IAAA,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9B,QAAA,OAAO,+CAA+C,CAAC;AACxD,KAAA;;AAGD,IAAA,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;QAChC,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO,CAAA,kBAAA,EAAqB,MAAM,CAAA,SAAA,CAAW,CAAC;AAC/C,KAAA;;AAGD,IAAA,OAAO,UAAU,CAAC;AACpB,CAAC;AAED;;;;;AAKG;AACI,eAAe,kBAAkB,CACtC,OAAuB,EACvB,OAAgB,IAAI,EAAA;IAEpB,MAAM,GAAG,GAAG,IAAI;AACd,UAAE,0FAA0F;UAC1F,iEAAiE,CAAC;IACtE,MAAM,OAAO,GAAQ,IAAI;AACvB,UAAE;AACE,YAAA,cAAc,EAAE,kBAAkB;AAClC,YAAA,MAAM,EAAE,aAAa,CAAC,OAAO,CAAC;AAC/B,SAAA;AACH,UAAE;AACE,YAAA,cAAc,EAAE,kBAAkB;AAClC,YAAA,6BAA6B,EAAE,GAAG;SACnC,CAAC;IAEN,OAAO,KAAK,CAAC,GAAG,EAAE;AAChB,QAAA,MAAM,EAAE,MAAM;QACd,OAAO;AACP,QAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;AAC9B,KAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAG;AACjB,QAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AAChB,YAAA,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACtC,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC,IAAI,EAA8B,CAAC;AACrD,KAAC,CAAC,CAAC;AACL;;;;"}